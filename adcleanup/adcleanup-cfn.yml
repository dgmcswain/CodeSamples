---
AWSTemplateFormatVersion: '2010-09-09'
Description: EC2 Automated AD Cleanup on Termination
Resources:
  LambdaExecRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns: 
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        - "arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess"
        - "arn:aws:iam::aws:policy/AmazonSQSFullAccess"
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Path: /
  Lambda:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: index.lambda_handler
      Role:
        Fn::GetAtt:
        - LambdaExecRole
        - Arn
      Code:
        ZipFile: |
          import boto3

          def lambda_handler(event, context):
              ec2 = boto3.resource('ec2')
              sqs = boto3.client('sqs')
              queue_url = 'https://sqs.us-east-1.amazonaws.com/123456789012/ADCleanup-SQS'
              instance_id = event['detail']['instance-id']
              account_id = event['account']
              ec2instance = ec2.Instance(instance_id)
              ado_id = 'Blank'
              instance_name = 'Blank'
              instance_os = 'Blank'
              cleanup_exclude = 'Blank'

              for tag in ec2instance.tags:
                  if tag['Key'] == 'InstanceName':
                      instance_name = tag['Value']
                  elif tag['Key'] == 'AMIOperatingSys':
                      instance_os = tag['Value']
                  elif tag['Key'] == 'ADO':
                      ado_id = tag['Value']
                  elif tag['Key'] == 'HCQIS-ExcludeFromCleanup':
                      cleanup_exclude = tag['Value']

              if not instance_name == 'Blank':
                  sqs.send_message(
                      QueueUrl=queue_url,
                      DelaySeconds=10,
                      MessageBody=(str({
                      "ADO": ado_id,
                      "AccountId": account_id,
                      "InstanceId": instance_id,
                      "InstanceName": instance_name,
                      "OS": instance_os,
                      "Exclude": cleanup_exclude
                      }))
                  )
      Runtime: python3.7
      Timeout: 25
  CWE:
    Type: "AWS::Events::Rule"
    Properties:
      Description: CloudWatch Event - Automated AD Cleanup on EC2 termination 
      EventPattern:
        source:
        - aws.ec2
        detail-type:
        - EC2 Instance State-change Notification
        detail:
          state:
          - terminated
      State: ENABLED
      Targets:
      - Arn:
          Fn::GetAtt:
          - Lambda
          - Arn
        Id: TargetFunctionV1
  CWEInvokeLambdaPermission:
    Type: "AWS::Lambda::Permission"
    Properties:
      FunctionName:
        Ref: Lambda
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - CWE
        - Arn
